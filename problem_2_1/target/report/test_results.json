{"projectName":"problem_2_1","totalTests":2,"passed":2,"failed":0,"skipped":0,"coveredLines":15,"missedLines":2,"coveragePercentage":88.24,"moduleStatus":[{"name":"problem_2_1","totalTests":2,"passed":2,"failed":0,"skipped":0,"tests":[{"name":"addEmployeeTest#\u0027Test1\u0027","status":"PASSED"},{"name":"addEmployeeTestInvalid#\u0027Test2\u0027","status":"PASSED"}]}],"moduleCoverage":[{"name":"problem_2_1","coveredLines":15,"missedLines":2,"coveragePercentage":88.24,"sourceFiles":[{"name":"main.bal","coveredLines":[6,7,8,9,12,13,16,18,19,20,23,25,29,31,35],"missedLines":[26,32],"coveragePercentage":88.24,"sourceCode":"import ballerina/sql;\r\nimport ballerina/log;\r\nimport ballerinax/java.jdbc;\r\n\r\nfunction addEmployee(string dbFilePath, string name, string city, string department, int age) returns int {\r\n    jdbc:Client|sql:Error dbClient \u003d new (\r\n        url \u003d \"jdbc:h2:\" + dbFilePath,\r\n        user \u003d \"root\",\r\n        password \u003d \"root\"\r\n    );\r\n\r\n    if dbClient is sql:Error {\r\n        panic error(dbClient.message());\r\n    }\r\n\r\n    sql:ExecutionResult|sql:Error res \u003d dbClient-\u003eexecute(`INSERT INTO Employee (name, city, department, age) VALUES (${name}, ${city}, ${department}, ${age})`);\r\n\r\n    if res is sql:Error {\r\n        log:printError(res.message());\r\n        return -1;\r\n    }\r\n\r\n    int|error id \u003d res.lastInsertId.ensureType(int);\r\n\r\n    if id is error {\r\n        panic error(\"Faulty Table Model.\");\r\n    }\r\n\r\n    sql:Error? err \u003d dbClient.close();\r\n\r\n    if err is sql:Error {\r\n        panic error(err.message());\r\n    }\r\n\r\n    return id;\r\n}\r\n"}]}]}