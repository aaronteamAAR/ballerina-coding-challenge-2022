{"projectName":"problem_5_1","totalTests":2,"passed":2,"failed":0,"skipped":0,"coveredLines":28,"missedLines":3,"coveragePercentage":90.32,"moduleStatus":[{"name":"problem_5_1","totalTests":2,"passed":2,"failed":0,"skipped":0,"tests":[{"name":"testGqlWithMinutesService","status":"PASSED"},{"name":"testGqlWithSecondsService","status":"PASSED"}]},{"name":"problem_5_1.back_ends","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"problem_5_1","coveredLines":16,"missedLines":2,"coveragePercentage":88.89,"sourceFiles":[{"name":"types.bal","coveredLines":[3,8,9,15,19,26,32],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"type ApiResponse record {|\r\n  Sleep[] sleep;\r\n|};\r\n\r\ntype Sleep record {|\r\n  string date;\r\n  int duration;\r\n  record {| Summary summary; |}levels;\r\n|};\r\n\r\ntype Summary record {|\r\n  LevelData deep;\r\n  LevelData light;\r\n  LevelData wake;\r\n|};\r\n\r\ntype LevelData record {\r\n  int minutes;\r\n};\r\n\r\n\r\ntype TSleepSummary record {\r\n  readonly string date;\r\n  int duration;\r\n  Levels levels;\r\n};\r\n\r\ntype Levels record {\r\n  int deep;\r\n  int wake;\r\n  int light;\r\n};\r\n"},{"name":"service.bal","coveredLines":[12,13,16,18,19,23,25,26,27],"missedLines":[20,21],"coveragePercentage":81.82,"sourceCode":"import ballerina/http;\nimport ballerina/graphql;\nimport ballerina/io;\nimport problem_5_1.back_ends as _;\n\npublic enum TimeUnit {\n  SECONDS,\n  MINUTES\n}\n\nhttp:Client apiClient \u003d check new(\"http://localhost:9091/activities/summary/sleep/user\");\n// Don\u0027t change the port number\nservice /graphql on new graphql:Listener(9090) {\n    // Write your answer here. You must change the input and\n    // the output of the below signature along with the logic.\n    resource function get sleepSummary(string ID, TimeUnit timeunit) returns TSleepSummary[] {\n\n        ApiResponse|error response \u003d  apiClient-\u003eget(\"/\" + ID);\n        if response is error {\n            io:println(response);\n            return [];\n        }\n        table\u003cTSleepSummary\u003e key(date) sleepTable \u003d table key(date) from var sleep in response.sleep select {date: sleep.date, duration: timeunit \u003d\u003d SECONDS ? sleep.duration * 60 : sleep.duration, levels: {deep: timeunit \u003d\u003d SECONDS ? sleep.levels.summary.deep.minutes * 60 : sleep.levels.summary.deep.minutes, light: timeunit \u003d\u003d SECONDS ? sleep.levels.summary.light.minutes * 60 : sleep.levels.summary.light.minutes , wake: timeunit \u003d\u003d SECONDS ? sleep.levels.summary.wake.minutes * 60 : sleep.levels.summary.wake.minutes}};\n\n        return sleepTable.toArray();\n    }\n}\n"}]},{"name":"problem_5_1.back_ends","coveredLines":12,"missedLines":1,"coveragePercentage":92.31,"sourceFiles":[{"name":"fitfit_sleep_summary.bal","coveredLines":[8,11,12,14,15,16,17,19,20,23,24,25],"missedLines":[21],"coveragePercentage":92.31,"sourceCode":"import ballerina/log;\nimport ballerina/io;\nimport ballerina/http;\nimport ballerina/os;\n\nconfigurable int sleep_summary_port \u003d 9091;\n\nservice /activities/summary on new http:Listener(sleep_summary_port) {\n\n    function init() {\n        log:printInfo(\"Fitfit sleep summary API started\", host \u003d \"0.0.0.0\", port \u003d sleep_summary_port, protocol \u003d \"HTTP\");\n    }\n\n    resource function get sleep/user/[string id]() returns json|error {\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\n        if dataSource \u003d\u003d \"\" {\n            dataSource \u003d \"tests/resources/data.json\";\n        }\n        json|io:Error data \u003d io:fileReadJson(dataSource);\n        if data is io:Error {\n            return error(\"Failed to load data\");\n        }\n        return data;\n    }\n}\n"}]}]}