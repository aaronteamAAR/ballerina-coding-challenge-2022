{"projectName":"problem_3_4","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":75,"missedLines":13,"coveragePercentage":85.23,"moduleStatus":[{"name":"problem_3_4","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testFindTheGift","status":"PASSED"}]},{"name":"problem_3_4.back_ends","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"problem_3_4","coveredLines":28,"missedLines":4,"coveragePercentage":87.5,"sourceFiles":[{"name":"main.bal","coveredLines":[26,27,28,29,30,32,34,36,37,40,41,43,45,49,50,52,53,59,60,65,76,82],"missedLines":[46,66],"coveragePercentage":91.67,"sourceCode":"import ballerina/io;\r\nimport ballerina/http;\r\n\r\nhttp:ClientConfiguration ActivitesEPConfig \u003d {\r\n    retryConfig : {\r\n        count: 5,\r\n        interval: 3,\r\n        statusCodes: [500]\r\n    },\r\n    timeout: 10\r\n};\r\n\r\nhttp:FailoverClientConfiguration InsureEPConfig \u003d {\r\n    targets: [\r\n        {url: \"http://localhost:9092/insurance1\"},\r\n        {url: \"http://localhost:9092/insurance2\"}\r\n    ],\r\n    failoverCodes: [500],\r\n    timeout: 10,\r\n    interval: 3\r\n};\r\n\r\nfunction findTheGift(string userID, string \u0027from, string to) returns Gift|error {\r\n    // Write your answer here.\r\n    // A `Gift` record is initialized to make the given function compilable.\r\n    io:println(\"here\");\r\n    final http:Client fifitEp \u003d check new (\"http://localhost:9091/activities\", ActivitesEPConfig);\r\n    final http:FailoverClient insureEveryoneEp \u003d check new ({...InsureEPConfig});\r\n    io:println(\"here\");\r\n    Activities activities \u003d check fifitEp-\u003eget(\"/steps/user/\" + userID + \"/from/\" + \u0027from + \"/to/\" + to);\r\n\r\n    record {|record {int age;} user;|} res \u003d check insureEveryoneEp-\u003eget(\"/user/\" + userID);\r\n\r\n    int steps \u003d 0;\r\n\r\n    foreach var activity in activities.activities\\-steps {\r\n        steps +\u003d activity.value;\r\n    }\r\n\r\n    int age \u003d res.user.age;\r\n    int score \u003d steps / ((100 - age) / 10);\r\n\r\n    Types? giftType \u003d giftTypeFromScore(score);\r\n\r\n    if giftType is () {\r\n        return {eligible: false, \u0027from, to, score};\r\n    }\r\n\r\n    GiftDetails giftDetails \u003d {\u0027type: giftType, message: \"Congratulations! You have won the \" + giftType + \" gift!\"};\r\n    Gift gift \u003d {eligible: true, \u0027from, to, score, details: giftDetails};\r\n\r\n    return gift;\r\n}\r\n\r\ntype Activities record {\r\n    record {|\r\n        string date;\r\n        int value;\r\n    |}[] activities\\-steps;\r\n};\r\n\r\ntype UserResult record {\r\n    record {\r\n        int age;\r\n    } user;\r\n};\r\n\r\ntype Gift record {\r\n    boolean eligible;\r\n    int score;\r\n    # format yyyy-mm-dd\r\n    string \u0027from;\r\n    # format yyyy-mm-dd\r\n    string to;\r\n    GiftDetails details?;\r\n};\r\n\r\ntype GiftDetails record {\r\n    Types \u0027type;\r\n    # message string: Congratulations! You have won the ${type} gift!;\r\n    string message;\r\n};\r\n\r\nenum Types {\r\n    SILVER,\r\n    GOLD,\r\n    PLATINUM\r\n}\r\n\r\nconst int SILVER_BAR \u003d 5000;\r\nconst int GOLD_BAR \u003d 10000;\r\nconst int PLATINUM_BAR \u003d 20000;\r\n"},{"name":"utils.bal","coveredLines":[2,3,5,8,9,12],"missedLines":[6,11],"coveragePercentage":75.0,"sourceCode":"public function giftTypeFromScore(int score) returns Types? {\r\n    if score \u003e\u003d SILVER_BAR \u0026\u0026 score \u003c GOLD_BAR {\r\n        return SILVER;\r\n    }\r\n    if score \u003e\u003d GOLD_BAR \u0026\u0026 score \u003c PLATINUM_BAR {\r\n        return GOLD;\r\n    }\r\n    if score \u003e\u003d PLATINUM_BAR {\r\n        return PLATINUM;\r\n    }\r\n    return;\r\n}\r\n"}]},{"name":"problem_3_4.back_ends","coveredLines":47,"missedLines":9,"coveragePercentage":83.93,"sourceFiles":[{"name":"insure_everyone_user_api.bal","coveredLines":[8,10,13,14,16,17,18,19,21,26,28,29,35,36,38,41,42,43,45,46,50,51,53,54],"missedLines":[23,24,30,31,33,47],"coveragePercentage":80.0,"sourceCode":"import ballerina/http;\r\nimport ballerina/os;\r\nimport ballerina/io;\r\nimport ballerina/log;\r\n\r\nconfigurable int user_port_eval \u003d 9092;\r\n\r\nservice / on new http:Listener(user_port_eval) {\r\n\r\n    boolean errorState \u003d true;\r\n\r\n    function init() {\r\n        log:printInfo(\"Insure everyone user API started\", host \u003d \"0.0.0.0\", port \u003d user_port_eval, protocol \u003d \"HTTP\");\r\n    }\r\n\r\n    resource function get insurance1/user/[string userId]() returns json|http:InternalServerError|error {\r\n        if self.errorState {\r\n            http:InternalServerError ise \u003d {\r\n                body: {message: \"Oops! Something went wrong!\"}\r\n            };\r\n            return ise;\r\n        } else {\r\n            self.errorState \u003d true;\r\n            return check self.getUserResponse();\r\n        }\r\n    }\r\n\r\n    resource function get insurance2/user/[string userId]() returns json|http:InternalServerError|error {\r\n        if !self.errorState {\r\n            http:InternalServerError ise \u003d {\r\n                body: {message: \"Oops! Something went wrong!\"}\r\n            };\r\n            return ise;\r\n        } else {\r\n            self.errorState \u003d false;\r\n            return check self.getUserResponse();\r\n        }\r\n    }\r\n\r\n    function getUserResponse() returns json|error {\r\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\r\n        if dataSource \u003d\u003d \"\" {\r\n            dataSource \u003d \"resources/data.json\";\r\n        }\r\n        json|io:Error data \u003d io:fileReadJson(dataSource);\r\n        if data is io:Error {\r\n            return error(\"Failed to load data\");\r\n        }\r\n\r\n        return {\r\n            \"user\": check data.user\r\n        };\r\n    }\r\n}\r\n"},{"name":"fitfit_steps_api.bal","coveredLines":[9,14,15,16,18,19,20,21,23,24,30,31,34,35,36,37,38,39,40,42,44,47,48],"missedLines":[25,26,45],"coveragePercentage":88.46,"sourceCode":"import ballerina/http;\r\nimport ballerina/log;\r\nimport ballerina/io;\r\nimport ballerina/os;\r\nimport ballerina/lang.runtime;\r\n\r\nconfigurable int steps_port_eval \u003d 9091;\r\n\r\nservice /activities on new http:Listener(steps_port_eval) {\r\n\r\n    private int count;\r\n\r\n    function init() {\r\n        log:printInfo(\"Fitfit steps API started\", host \u003d \"0.0.0.0\", port \u003d steps_port_eval, protocol \u003d \"HTTP\");\r\n        self.count \u003d 0;\r\n    }\r\n\r\n    resource function get steps/user/[string id]/\u0027from/[string fromDate]/to/[string toDate]() returns json|http:InternalServerError|error {\r\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\r\n        if dataSource \u003d\u003d \"\" {\r\n            dataSource \u003d \"resources/data.json\";\r\n        }\r\n        json|io:Error data \u003d io:fileReadJson(dataSource);\r\n        if data is io:Error {\r\n            return \u003chttp:InternalServerError\u003e{\r\n                body: {message: \"Failed to load data\"}\r\n            };\r\n        }\r\n\r\n        json response \u003d {\r\n            \"activities-steps\": check data.stepsActivity\r\n        };\r\n\r\n        self.count +\u003d 1;\r\n        if self.count % 3 \u003d\u003d 0 {\r\n            self.count \u003d 0;\r\n            return response;\r\n        } else if self.count % 2 \u003d\u003d 0 {\r\n            http:InternalServerError ise \u003d {\r\n                body: {message: \"Oops! Something went wrong!\"}\r\n            };\r\n            return ise;\r\n        } else {\r\n            runtime:sleep(40);\r\n            return response;\r\n        }\r\n    }\r\n}\r\n"}]}]}