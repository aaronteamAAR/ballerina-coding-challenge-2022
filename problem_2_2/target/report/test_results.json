{"projectName":"problem_2_2","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":16,"missedLines":2,"coveragePercentage":88.89,"moduleStatus":[{"name":"problem_2_2","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"addBatchTest#\u0027Test1\u0027","status":"PASSED"}]}],"moduleCoverage":[{"name":"problem_2_2","coveredLines":16,"missedLines":2,"coveragePercentage":88.89,"sourceFiles":[{"name":"types.bal","coveredLines":[17],"missedLines":[9],"coveragePercentage":50.0,"sourceCode":"// import ballerina/time;\r\n\r\ntype Employee record {|\r\n    int employee_id;\r\n    string name;\r\n    string city;\r\n    string department;\r\n    int age;\r\n|};\r\n\r\ntype Payment record {|\r\n  int payment_id?;\r\n  string date;\r\n  decimal amount;\r\n  int employee_id;\r\n  string reason;\r\n|};\r\n"},{"name":"main.bal","coveredLines":[6,7,8,9,12,13,16,18,22,24,26,28,29,30,33],"missedLines":[19],"coveragePercentage":93.75,"sourceCode":"import ballerina/sql;\nimport ballerina/io;\nimport ballerinax/java.jdbc;\n\nfunction addPayments(string dbFilePath, string paymentFilePath) returns error|int[] {\n    jdbc:Client|sql:Error dbClient \u003d new (\n        url \u003d \"jdbc:h2:\" + dbFilePath,\n        user \u003d \"root\",\n        password \u003d \"root\"\n    );\n\n    if dbClient is sql:Error {\n        panic error(dbClient.message());\n    }\n\n    json jsonFile \u003d check io:fileReadJson(paymentFilePath);\n\n    if !(jsonFile is json[]) {\n        panic error(\"Invalid JSON.\");\n    }\n\n    Payment[] payments \u003d check jsonFile.fromJsonWithType();\n\n    sql:ParameterizedQuery[] insertQueries \u003d from var payment in payments select `INSERT INTO Payment (date, amount, employee_id, reason) VALUES (${payment.date}, ${payment.amount}, ${payment.employee_id}, ${payment.reason})`;\n\n    sql:ExecutionResult[] result \u003d check dbClient-\u003ebatchExecute(insertQueries);\n\n    int[] generatedIds \u003d [];\n    foreach var summary in result {\n        generatedIds.push(\u003cint\u003esummary.lastInsertId);\n    }\n\n    return generatedIds;\n}\n"}]}]}