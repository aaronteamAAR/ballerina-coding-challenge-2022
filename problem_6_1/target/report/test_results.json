{"projectName":"problem_6_1","totalTests":3,"passed":3,"failed":0,"skipped":0,"coveredLines":39,"missedLines":1,"coveragePercentage":97.5,"moduleStatus":[{"name":"problem_6_1","totalTests":3,"passed":3,"failed":0,"skipped":0,"tests":[{"name":"testPickUpNegotiationFailure","status":"PASSED"},{"name":"testPickUpNegotiationSuccess","status":"PASSED"},{"name":"testPickUpNegotiationSuccessMovingToV","status":"PASSED"}]},{"name":"problem_6_1.shuttle_service","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"problem_6_1","coveredLines":15,"missedLines":0,"coveragePercentage":100.0,"sourceFiles":[{"name":"main.bal","coveredLines":[4,5,6,8,9,12,13,14,15,17,18,21,22,23,24],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"import ballerina/websocket;\n\nfunction negotiatePickUp(string path, string name, Location location) returns error|Location[] {\n  websocket:Client socketClient \u003d check new(path + \"?name\u003d\" + name);\n  check socketClient-\u003ewriteMessage(location);\n  string nextShuttleLocation \u003d check socketClient-\u003ereadTextMessage();\n\n  return decidePickUp(socketClient, location, check nextShuttleLocation.ensureType(Location));\n}\n\nfunction decidePickUp(websocket:Client socketClient, Location location, Location nextShuttleLocation) returns error|Location[] {\n  match loc[location][nextShuttleLocation] {\n    -1 \u003d\u003e {\n      check socketClient-\u003eclose();\n      return error(\"Client has already gone past the pickup point.\");\n    }\n    1 \u003d\u003e {\n      return [location, check nextShuttleLocation.ensureType(Location)];\n    }\n  }\n  check socketClient-\u003ewriteMessage(\"V\");\n  string currentNextLocation \u003d check socketClient-\u003ereadTextMessage();\n  return decidePickUp(socketClient, \"V\", check currentNextLocation.ensureType(Location));\n}\n\nmap\u003cmap\u003cint\u003e\u003e loc \u003d {\n  \"R\": {\n    \"R\": 1,\n    \"S\": -1,\n    \"T\": 0,\n    \"U\": 0,\n    \"V\": -1,\n    \"W\": -1\n  },\n  \"S\": {\n    \"R\": 1,\n    \"S\": 1,\n    \"T\": 0,\n    \"U\": 0,\n    \"V\": -1,\n    \"W\": -1\n  },\n  \"T\": {\n    \"R\": 0,\n    \"S\": 0,\n    \"T\": 1,\n    \"U\": -1,\n    \"V\": -1,\n    \"W\": -1\n  },\n  \"U\": {\n    \"R\": 0,\n    \"S\": 0,\n    \"T\": 1,\n    \"U\": 1,\n    \"V\": -1,\n    \"W\": -1\n  },\n  \"V\": {\n    \"R\": 1,\n    \"S\": 1,\n    \"T\": 1,\n    \"U\": 1,\n    \"V\": 1,\n    \"W\": -1\n  }\n};\n"}]},{"name":"problem_6_1.shuttle_service","coveredLines":24,"missedLines":1,"coveragePercentage":96.0,"sourceFiles":[{"name":"shuttle_service.bal","coveredLines":[7,8,9,10,11,20,21,24,25,27,28,29,31,32,33,34,35,39,40,42,43,44,45,46],"missedLines":[36],"coveragePercentage":96.0,"sourceCode":"import ballerina/websocket;\n\npublic string nextShuttleLocation \u003d \"T\";\n\npublic map\u003c[websocket:Caller?, string[]]\u003e pickUpRequests \u003d {};\n\nservice /shuttle on new websocket:Listener(9094) {\n    resource function get . (string name) returns websocket:Service|websocket:UpgradeError {\n        return \u003cShuttleService|websocket:UpgradeError\u003e trap new ShuttleService(name);\n    }\n}\n\npublic boolean updateToWAfterChanging \u003d false;\n\nservice class ShuttleService {\n    *websocket:Service;\n    private final string name;\n\n    public function init(string name) {\n        if pickUpRequests.hasKey(name) {\n            panic error websocket:UpgradeError(string `User ${name} is already registered`);\n        }\n\n        self.name \u003d name;\n    }\n\n    remote function onOpen(websocket:Caller caller) {\n        pickUpRequests[self.name] \u003d [caller, []];\n    }\n\n    remote function onMessage(websocket:Caller caller, string location) returns error? {\n        pickUpRequests.get(self.name)[1].push(location);\n        string currentNextShuttleLocation \u003d \u003cstring\u003enextShuttleLocation;\n        lock {\n            if updateToWAfterChanging {\n                nextShuttleLocation \u003d \"W\";\n            }\n        }\n        check caller-\u003ewriteTextMessage(currentNextShuttleLocation);\n    }\n\n    remote function onClose(websocket:Caller caller) returns error? {\n        [websocket:Caller?, string[]] entry \u003d pickUpRequests.get(self.name);\n        entry[0] \u003d ();\n        check caller-\u003eclose(timeout \u003d 2);\n    }\n}\n\n"}]}]}